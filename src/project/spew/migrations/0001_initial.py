# Generated by Django 2.1.2 on 2018-11-06 20:22

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    atomic = False
    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Class',
            fields=[
                ('title', models.CharField(max_length=200)),
                ('code', models.CharField(default='404', max_length=100)),
                ('description', models.TextField(help_text='Enter a brief description of the class', max_length=1000)),
                ('num_credits', models.TextField(help_text='Enter a the number of credits this class fulfills', max_length=1000)),
                ('exams', models.TextField(help_text='Does this class have exams?', max_length=1000)),
                ('attendance', models.TextField(help_text='Is attendance taken at this class?', max_length=1000)),
                ('textbooks', models.TextField(help_text='Does this class require textbooks?', max_length=1000)),
                ('class_id', models.CharField(default=uuid.uuid1, help_text='Unique ID for this particular class across the website', max_length=1000, primary_key=True, serialize=False)),
                ('related_classes', models.ManyToManyField(help_text='Select a class that is related to this one', related_name='_class_related_classes_+', to='spew.Class')),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(help_text='Enter a brief comment about the class.', max_length=1000)),
                ('rating', models.CharField(help_text='Give a rating from 1 to 5', max_length=100)),
                ('date', models.DateField(blank=True, null=True)),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='spew.Class')),
            ],
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('position', models.CharField(max_length=100)),
                ('contact', models.TextField(help_text='Enter a brief description of the class', max_length=1000)),
                ('office', models.CharField(max_length=100)),
                ('prof_id', models.CharField(default=uuid.uuid4, help_text='Unique ID for this particular professor', max_length=1000, primary_key=True, serialize=False)),
                ('course', models.ManyToManyField(help_text='Select the classes this professor teaches', to='spew.Class')),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_name', models.CharField(help_text='Enter a class subject (e.g. Computer Science)', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('concentration', models.CharField(default='NA', max_length=100)),
                ('bio', models.TextField(default='', help_text='Enter a bio for this user', max_length=1000)),
                ('grad_year', models.CharField(default='2020', max_length=100)),
                ('num_classes_taken', models.TextField(default='', help_text='# of classes taken by this user', max_length=1000)),
                ('num_liked_reviews', models.TextField(default='', help_text='# of reviews this user liked', max_length=1000)),
                ('user_id', models.CharField(default=uuid.uuid4, help_text='Unique ID for this particular user', max_length=1000, primary_key=True, serialize=False)),
                ('current_courses', models.ManyToManyField(help_text='Select the classes this user is currently taking', related_name='current_courses', to='spew.Class')),
                ('fav_courses', models.ManyToManyField(help_text='Select the classes this user favorites', related_name='fav_courses', to='spew.Class')),
                ('major', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='spew.Subject')),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.AddField(
            model_name='feedback',
            name='professor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='spew.Professor'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='spew.User'),
        ),
        migrations.AddField(
            model_name='class',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='spew.Subject'),
        ),
    ]
